%% -*- mode: erlang -*-
%% System configuration for presence_dashboard
%% Copy to sys.config and adjust values for your environment

[
 %% Lager configuration for logging
 {lager, [
   {log_root, "log"},
   {handlers, [
     {lager_console_backend, [
       {level, info},
       {formatter, lager_default_formatter},
       {formatter_config, [
         date, " ", time, " [", severity, "] ",
         {pid, ["pid=", pid], ""},
         {module, [
           {pid, ["@"], ""},
           module,
           {function, [":", function], ""},
           {line, [":", line], ""}
         ], ""},
         " ", message, "\n"
       ]}
     ]},
     {lager_file_backend, [
       {file, "error.log"},
       {level, error},
       {size, 10485760},  % 10MB
       {date, "$D0"},     % Rotate daily
       {count, 7}         % Keep 7 files
     ]},
     {lager_file_backend, [
       {file, "console.log"},
       {level, info},
       {size, 10485760},
       {date, "$D0"},
       {count, 7}
     ]}
   ]},
   {crash_log, "crash.log"},
   {crash_log_msg_size, 65536},
   {crash_log_size, 10485760},
   {crash_log_date, "$D0"},
   {crash_log_count, 5},
   {error_logger_redirect, true}
 ]},

 %% Kernel configuration
 {kernel, [
   {logger_level, info},
   {logger, [
     {handler, default, logger_std_h,
      #{level => info,
        config => #{
          file => "log/kernel.log",
          max_no_bytes => 10485760,
          max_no_files => 5
        }}}
   ]}
 ]},

 %% SASL configuration
 {sasl, [
   {sasl_error_logger, false}
 ]},

 %% presence_core configuration
 {presence_core, [
   {heartbeat_interval, 30000},    % 30 seconds
   {offline_timeout, 90000},       % 90 seconds
   {max_users_per_node, 100000},
   {registry_cleanup_interval, 300000}  % 5 minutes
 ]},

 %% presence_store configuration  
 {presence_store, [
   {backend, ets},
   {ets_options, [
     {name, presence_data},
     {type, set},
     {keypos, 1},
     {access, public},
     {read_concurrency, true},
     {write_concurrency, true}
   ]}
 ]},

 %% presence_api configuration
 {presence_api, [
   {http_port, 8080},
   {http_acceptors, 100},
   {ws_idle_timeout, 60000},
   {ws_max_frame_size, 65536},
   {auth_enabled, true},
   {jwt_secret, <<"CHANGE_ME_TO_RANDOM_SECRET_IN_PRODUCTION">>},
   {jwt_algorithm, hs256},
   {rate_limit, [
     {max_connections_per_ip, 100},
     {max_requests_per_minute, 1000},
     {ws_messages_per_minute, 600}
   ]},
   {cors_enabled, true},
   {cors_origins, [<<"*">>]}
 ]},

 %% presence_admin configuration
 {presence_admin, [
   {admin_port, 9090},
   {admin_acceptors, 10},
   {admin_auth, [
     {username, <<"admin">>},
     {password, <<"CHANGE_ME_IN_PRODUCTION">>}
   ]},
   {metrics_enabled, true},
   {metrics_interval, 5000},
   {prometheus_enabled, true},
   {prometheus_port, 9091},
   {dashboard_enabled, true}
 ]},

 %% Telemetry configuration
 {telemetry_poller, [
   {measurements, [
     {process_info, [
       {process_info, [memory, message_queue_len]},
       {name, [presence_core, vm, process]}
     ]},
     {vm_memory, [
       {vm_memory, []},
       {name, [presence_core, vm, memory]}
     ]},
     {vm_system_info, [
       {vm_system_info, [
         process_count,
         port_count,
         atom_count
       ]},
       {name, [presence_core, vm, system]}
     ]}
   ]},
   {period, 5000}  % 5 seconds
 ]}
].